# Run Arbitrary SQL scripts - Readme
# ==================================
# Description: This module is used run arbitrary SQL Scripts. Single & multiple sql scripts can be run. 

In the following example we're going to run two scripts (one will create a simple table and another one will insert few rows into that table).

1. There are two files which need to be updated:
        a. {{ collection_dir }}/power_aix_oracle_dba/playbooks/vars/manage-arbitrarysql-vars.yml: This file contains database hostname, database port number and the path to the Oracle client and other related parameters.
        b. {{ collection_dir }}/power_aix_oracle_dba/playbooks/vars/vault.yml: This contains sys password which will be used by cx_oracle to connect to the database with sysdba privilege.

2. Update the common variables file: {{collection_dir}}/power_aix_oracle_dba/playbooks/vars/manage-arbitrarysql-vars.yml as shown below

hostname: ansible_db                           # AIX hostname where the Database is running.
service_name: devpdb                           # Database service name.
listener_port: 1521                            # Database port number.
oracle_db_home: /home/ansible/oracle_client    # Oracle Instant Client path on the ansible controller.
sqlfile:
   - { script: 'create.sql' }   # SQL Script 1 location & name of the file.
   - { script: 'insert.sql' }   # SQL Script 2 location & name of the file.

3. Update the passwords file: {{ collection_dir }}/power_aix_oracle_dba/playbooks/vars/vault.yml with sys user password. This file needs to be encrypted using ansible-vault. While running the playbook, please provide the vault password.
default_dbpass: Oracle4u # SYS password
default_gipass: Oracle4u # ASMSNMP password

4. Encrypt the passwords file using ansible-vault as shown below
$ ansible-vault encrypt vars/vault.yml
New Vault password:
Confirm New Vault password:
Encryption successful

5. Create the playbook in {{ collection_dir }}/power_aix_oracle_dba/playbooks directory as shown below

$ cat manage-arbitrarysql.yml

- hosts: localhost
  connection: local
  vars_files:
   - vars/vault.yml
   - vars/manage-arbitrarysql-vars.yml
  roles:
     - { role: oradb_manage_sql }

6. Execute the playbook as shown below

$ ansible-playbook manage-arbitrarysql.yml -i inventory.yml --ask-vault-pass
Vault password:

PLAY [localhost] **********************************************************************************************************************

TASK [Gathering Facts] ****************************************************************************************************************
ok: [localhost]

TASK [oradb_manage_sql : oracle_sql] *************************************************************************
changed: [localhost] => (item={'script': 'create.sql'})
changed: [localhost] => (item={'script': 'insert.sql'})

TASK [oradb_manage_sql : set_fact] ***************************************************************************
ok: [localhost]

TASK [oradb_manage_sql : SQL Output] *************************************************************************
ok: [localhost] => {
    "sql_ouput": "[\n        \"Finished running script create.sql \nContents: \nCREATE TABLE ansible1(person_id NUMBER GENERATED BY DEFAULT AS IDENTITY, first_name VARCHAR2(50) NOT NULL,last_name VARCHAR2(50) NOT NULL);\ninsert into ansible1 (person_id,first_name,last_name) values (10,'ansiuser','2')\",\n        \"Finished running script insert.sql \nContents: \ninsert into ansible1 (person_id,first_name,last_name) values (11,'Ansi','User');\ninsert into ansible1 (person_id,first_name,last_name) values (12,'Ansi1','User1')\",\n]"
}

PLAY RECAP ****************************************************************************************************************************
localhost                  : ok=4    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

To execute this playbook from GUI, please refer this link: https://github.com/IBM/ansible-power-aix-oracle-dba/blob/main/docs/PowerODBA_using_AAP2.pdf
